function [slope,amp,Vm,Rin,sweepTimes] = STDPanalysisV2(cellName,preIdx,postIdx,EPSP_onset,prePost_offset,spikes_per_burst,burst_ISI)

% exportPath = '/Users/perryspratt/Google Drive/Lab/Data/Ephys/Export'; %path to ibw files

exportPath = '/Users/perryspratt/Google Drive/Lab/Data/Ephys/Export'; 


try
    temp = IBWread([exportPath filesep cellName '_slope.ibw']);
catch
    exportPath = '/Volumes/LAB (FAT32)/Data/Ephys/Export'; %path to ibw files
end



preIdx = preIdx+1;
postIdx = postIdx+1;



%% Get data out of the ibw files
try
    temp = IBWread([exportPath filesep cellName '_slope.ibw']);
    if length(temp.y) < postIdx(end)
        postIdx = postIdx(1):length(temp.y);
    end
    
    
    slope.pre = temp.y(preIdx)./mean(temp.y(preIdx));
    slope.post = temp.y(postIdx)./mean(temp.y(preIdx));
    slope.preRaw = temp.y(preIdx);
    slope.postRaw = temp.y(postIdx);
    
    temp = IBWread([exportPath filesep cellName '_amplitude.ibw']);
    amp.pre = temp.y(preIdx)./mean(temp.y(preIdx));
    amp.post = temp.y(postIdx)./mean(temp.y(preIdx));
    amp.preRaw = temp.y(preIdx);
    amp.postRaw = temp.y(postIdx);
    
    temp = IBWread([exportPath filesep cellName '_Vm.ibw']);
    Vm.pre = temp.y(preIdx)./mean(temp.y(preIdx));
    Vm.post = temp.y(postIdx)./mean(temp.y(preIdx));
    Vm.preRaw = temp.y(preIdx);
    Vm.postRaw = temp.y(postIdx);
    
    temp = IBWread([exportPath filesep cellName '_sweeptimes_min.ibw']);
    sweepTimes.all = temp.y;
    sweepTimes.pre = temp.y(preIdx);
    sweepTimes.post = temp.y(postIdx);
catch
    error(['Slope/amp/Vm .ibw files for ' cellName ' could not be found.'])
end


try
    temp = IBWread([exportPath filesep cellName '_Rin.ibw']);
    Rin.pre = temp.y(preIdx)./mean(temp.y(preIdx));
    Rin.post = temp.y(postIdx)./mean(temp.y(preIdx));
    Rin.preRaw = temp.y(preIdx);
    Rin.postRaw = temp.y(postIdx);
    
    temp = IBWread([exportPath filesep cellName '_rawsweeps.ibw']);
    [dim1 dim2] = size(temp.y);
    if dim2 == 1 % the exporter decided to export the Raw Vm as a single vector... Need to reshape
        try
            daq = 50000;%this may vary between cells
            temp.y = reshape(temp.y(1:daq*postIdx(end)),daq,postIdx(end));
        catch
            daq = 20000;%this may vary between cells
            temp.y = reshape(temp.y(1:daq*postIdx(end)),daq,postIdx(end));
        end
    end
    
    
    raw.pre = temp.y(:,preIdx);
    raw.post = temp.y(:,postIdx);
catch
    disp(['Rin/raw .ibw files for ' cellName ' could not be found'])
end

%% Bin data for each min


pairingStart = sweepTimes.all(preIdx(end)+1);
pairingEnd = sweepTimes.all(postIdx(1)-1);

%Pre
preBins = ceil(sweepTimes.pre(1)-pairingStart):0;
for i= 1:length(preBins)                     
    idx = find(sweepTimes.pre-pairingStart > preBins(i)-1 & sweepTimes.pre-pairingStart <= preBins(i));
    %norm mean by min
    slope.preMean(i) = mean(slope.pre(idx));
    amp.preMean(i) = mean(amp.pre(idx));
    Vm.preMean(i) = mean(Vm.pre(idx));
    Rin.preMean(i) = mean(Rin.pre(idx));
    %norm SEM by min
    slope.preSEM(i) = nansem(slope.pre(idx));
    amp.preSEM(i) = nansem(amp.pre(idx));
    Vm.preSEM(i) = nansem(Vm.pre(idx));
    Rin.preSEM(i) = nansem(Rin.pre(idx));
end

%Post
postBins = 1:ceil(sweepTimes.post(end)-pairingEnd);
for i=1:length(postBins)
    idx = find(sweepTimes.post-pairingEnd > postBins(i)-1 & sweepTimes.post-pairingEnd <= postBins(i));
    %norm mean by min
    slope.postMean(i) = mean(slope.post(idx));
    amp.postMean(i) = mean(amp.post(idx));
    Vm.postMean(i) = mean(Vm.post(idx));
    Rin.postMean(i) = mean(Rin.post(idx));
    %norm SEM by min
    slope.postSEM(i) = nansem(slope.post(idx));
    amp.postSEM(i) = nansem(amp.post(idx));
    Vm.postSEM(i) = nansem(Vm.post(idx));
    Rin.postSEM(i) = nansem(Rin.post(idx));
end

%% Plot The data
figure('units','normalized','outerposition',[0.05 0.05 .9 .9])
preBins = preBins-0.5;
postBins = postBins-0.5;
c1 = get(gca,'ColorOrder');
c2 = [0.7 0.7 0.7;0.7 0.7 0.7];

%-----Slope------
subplot(4,4,[3 4])
hold on;

%Formatting
set(gca,'fontsize',16,...
    'XMinorTick','on',...
    'YMinorTick','on',...
    'TickDir','out');
xlim([preBins(1)-.5 postBins(end)+.5]);
ylim([0.5 2]);
plot(preBins(1)-1:postBins(end)+1,ones(length(preBins(1)-1:postBins(end)+1)),...
    'color',[0 0 0],...
    'LineWidth',0.5);


%Plots
scatter(sweepTimes.pre-pairingStart,...
    slope.pre./mean(slope.pre),...
    'MarkerFaceColor',c2(1,:),...
    'MarkerEdgeColor',[1 1 1]);
scatter(sweepTimes.post-pairingEnd,...
    slope.post./mean(slope.pre),...
    'MarkerFaceColor',c2(2,:),...
    'MarkerEdgeColor',[1 1 1]);
errorbar(preBins,...
    slope.preMean,...
    slope.preSEM,...
    '-o',...
    'linewidth',1.5,...
    'color',c1(1,:),...
    'MarkerEdgeColor',[1 1 1],...
    'MarkerFaceColor',c1(1,:),...
    'MarkerSize',8,...
    'CapSize',0);
errorbar(postBins,...
    slope.postMean,...
    slope.postSEM,...
    '-o',...
    'linewidth',1.5,...
    'color',c1(2,:),...
    'MarkerEdgeColor',[1 1 1],...
    'MarkerFaceColor',c1(2,:),...
    'MarkerSize',8,...
    'CapSize',0);

%Labels
title('Normalized Slope');
ylabel('Slope (norm)');
%  xlabel('Time');



%-----Amplitude------
subplot(4,4,[7 8])
hold on;

%Formatting
set(gca,'fontsize',16,...
    'XMinorTick','on',...
    'YMinorTick','on',...
    'TickDir','out');
xlim([preBins(1)-.5 postBins(end)+.5]);
ylim([0.5 2]);
plot(preBins(1)-1:postBins(end)+1,ones(length(preBins(1)-1:postBins(end)+1)),...
    'color',[0 0 0],...
    'LineWidth',0.5);

%Plots
scatter(sweepTimes.pre-pairingStart,...
    amp.pre./mean(amp.pre),...
    'MarkerFaceColor',c2(1,:),...
    'MarkerEdgeColor',[1 1 1]);
scatter(sweepTimes.post-pairingEnd,...
    amp.post./mean(amp.pre),...
    'MarkerFaceColor',c2(2,:),...
    'MarkerEdgeColor',[1 1 1]);
errorbar(preBins,...
    amp.preMean,...
    amp.preSEM,...
    '-o',...
    'linewidth',1.5,...
    'color',c1(1,:),...
    'MarkerEdgeColor',[1 1 1],...
    'MarkerFaceColor',c1(1,:),...
    'MarkerSize',8,...
    'CapSize',0);
errorbar(postBins,...
    amp.postMean,...
    amp.postSEM,...
    '-o',...
    'linewidth',1.5,...
    'color',c1(2,:),...
    'MarkerEdgeColor',[1 1 1],...
    'MarkerFaceColor',c1(2,:),...
    'MarkerSize',8,...
    'CapSize',0);

%Labels
title('Normalized Amplitude');
ylabel('Amplitude (norm.)');


%-----Rin------
subplot(4,4,[11 12])
hold on;

%Formatting
set(gca,'fontsize',16,...
    'XMinorTick','on',...
    'YMinorTick','on',...
    'TickDir','out');
xlim([preBins(1)-.5 postBins(end)+.5]);
ylim([0.4 1.6]);
plot(preBins(1)-1:postBins(end)+1,ones(length(preBins(1)-1:postBins(end)+1)),...
    'color',[0 0 0],...
    'LineWidth',0.1);
plot(preBins(1)-1:postBins(end)+1,ones(length(preBins(1)-1:postBins(end)+1))-.2,...
    '--','color',[0.3 0.3 0.3]);
plot(preBins(1)-1:postBins(end)+1,ones(length(preBins(1)-1:postBins(end)+1))+.2,...
    '--','color',[0.3 0.3 0.3]);


%Plots
scatter(sweepTimes.pre-pairingStart,...
    Rin.pre./mean(Rin.pre),...
    'MarkerFaceColor',c2(1,:),...
    'MarkerEdgeColor',[1 1 1]);
scatter(sweepTimes.post-pairingEnd,...
    Rin.post./mean(Rin.pre),...
    'MarkerFaceColor',c2(2,:),...
    'MarkerEdgeColor',[1 1 1]);
errorbar(preBins,...
    Rin.preMean,...
    Rin.preSEM,...
    '-o',...
    'linewidth',1.5,...
    'color',c1(1,:),...
    'MarkerEdgeColor',[1 1 1],...
    'MarkerFaceColor',c1(1,:),...
    'MarkerSize',8,...
    'CapSize',0);
errorbar(postBins,...
    Rin.postMean,...
    Rin.postSEM,...
    '-o',...
    'linewidth',1.5,...
    'color',c1(2,:),...
    'MarkerEdgeColor',[1 1 1],...
    'MarkerFaceColor',c1(2,:),...
    'MarkerSize',8,...
    'CapSize',0);

%Labels
title('Normalized Rin');
ylabel('Rin (norm.)');
% xlabel('Time');

%-----Vm------
subplot(4,4,[15 16])
hold on;

set(gca,'fontsize',16,...
    'XMinorTick','on',...
    'YMinorTick','on',...
    'TickDir','out');
xlim([preBins(1)-.5 postBins(end)+.5]);
ylim([0.4 1.6]);
plot(preBins(1)-1:postBins(end)+1,ones(length(preBins(1)-1:postBins(end)+1)),...
    'color',[0 0 0],...
    'LineWidth',0.1);
plot(preBins(1)-1:postBins(end)+1,ones(length(preBins(1)-1:postBins(end)+1))-.2,...
    '--','color',[0.3 0.3 0.3]);
plot(preBins(1)-1:postBins(end)+1,ones(length(preBins(1)-1:postBins(end)+1))+.2,...
    '--','color',[0.3 0.3 0.3]);

%Plots
scatter(sweepTimes.pre-pairingStart,...
    Vm.pre./mean(Vm.pre),...
    'MarkerFaceColor',c2(1,:),...
    'MarkerEdgeColor',[1 1 1]);
scatter(sweepTimes.post-pairingEnd,...
    Vm.post./mean(Vm.pre),...
    'MarkerFaceColor',c2(2,:),...
    'MarkerEdgeColor',[1 1 1]);
errorbar(preBins,...
    Vm.preMean,...
    Vm.preSEM,...
    '-o',...
    'linewidth',1.5,...
    'color',c1(1,:),...
    'MarkerEdgeColor',[1 1 1],...
    'MarkerFaceColor',c1(1,:),...
    'MarkerSize',8,...
    'CapSize',0);
errorbar(postBins,...
    Vm.postMean,...
    Vm.postSEM,...
    '-o',...
    'linewidth',1.5,...
    'color',c1(2,:),...
    'MarkerEdgeColor',[1 1 1],...
    'MarkerFaceColor',c1(2,:),...
    'MarkerSize',8,...
    'CapSize',0);

%Labels
title('Normalized Vm');
ylabel('Vm (norm.)');
xlabel('Time (min)');

%-----EPSP------
subplot(4,4,[1 2 5 6 9 10])
hold on;

time = linspace(0-EPSP_onset,1-EPSP_onset,length(raw.pre(:,1)));
%Plots
% shadedErrorBar(time,...
%     mean(raw.pre,2),...
%     nansem(raw.pre,2),...
%     {'color',c1(1,:)});
% shadedErrorBar(time,...
%     mean(raw.post,2),...
%     nansem(raw.post,2),...
%     {'color',c1(2,:)});

%Pre values
plot(time,...
    mean(raw.pre,2),...
    'LineWidth',2,...
    'color',c1(1,:));
plot(time,...
    mean(raw.pre,2)+...
    nansem(raw.pre,2),...
    '--',...
    'LineWidth',1,...
    'color',c1(1,:));
plot(time,...
    mean(raw.pre,2)-...
    nansem(raw.pre,2),...
    '--',...
    'LineWidth',1,...
    'color',c1(1,:));

% Post values
plot(time,...
    mean(raw.post,2),...
    'LineWidth',2,...
    'color',c1(2,:));
plot(time,...
    mean(raw.post,2)+...
    nansem(raw.post,2),...
    '--',...
    'LineWidth',1,...
    'color',c1(2,:));
plot(time,...
    mean(raw.post,2)-...
    nansem(raw.post,2),...
    '--',...
    'LineWidth',1,...
    'color',c1(2,:));

%Formatting
set(gca,'fontsize',16,...
    'XMinorTick','on',...
    'YMinorTick','on',...
    'TickDir','out');
%Labels
title([cellName ' (' num2str(spikes_per_burst) ' spike burst, ' num2str(burst_ISI*1000) 'ms ISI, ' num2str(prePost_offset*1000) 'ms pre-post offset']);
xlim([-0.04 .08]);
% ylim([-2 10]);

trace = mean(raw.pre,2);
ylim([trace(1)-2 trace(1)+10]);

ylabel('Vm (mV)');
% xlabel('Time (s)');



%-----Pairing Protocol-----
subplot(4,4,[13 14])
hold on;

spikeTimes = prePost_offset:burst_ISI:prePost_offset+(spikes_per_burst-1)*burst_ISI;

%Plot pre EPSP
plot(time,ones(length(time),1),...
    'k','LineWidth',1.5);
text(-0.039,1.15,'Pre','FontSize',16);

plot([0 0],[1 1.5],'k','LineWidth',1.5);

%Plot post burst
plot(time,zeros(length(time),1),...
    'k','LineWidth',1.5)
text(-0.039,0.15,'Post','FontSize',16);
for i = 1:length(spikeTimes)
    plot([spikeTimes(i) spikeTimes(i)],[0 0.5],...
        'k','LineWidth',1.5)
end

%Formatting
set(gca,'fontsize',16,...
    'XMinorTick','on',...    
    'TickDir','out',...
    'YTick',[]);
       
%Labels
% title('Pairing Protocol');ce
xlim([-0.04 .08]);
ylim([-0.25 1.75]);
xlabel('Time (s)');


path = '/Users/perryspratt/Google Drive/Lab/Data/Analysis/STDP/Summary Images/';

print([path cellName ' (' num2str(spikes_per_burst) ' spike burst, ' num2str(burst_ISI*1000) 'ms ISI, ' num2str(prePost_offset*1000) 'ms pre-post offset'],'-dpng');
close;
